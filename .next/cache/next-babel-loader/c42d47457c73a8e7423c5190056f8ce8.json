{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/Pranay/Desktop/workaholic/workaholic-app/components/NotesCard.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styles from \"./TasksCard.module.scss\";\nimport Card from \"./Card\";\nimport Router from 'next/router';\n\nvar Notes = function Notes(props) {\n  var notes = props.notes;\n\n  var openNewNoteModal = function openNewNoteModal() {\n    props.openNewNoteModal();\n    Router.push('/notes');\n  };\n\n  return __jsx(Card, {\n    className: styles['tasks-card'],\n    title: \"Notes\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, __jsx(\"button\", {\n    onClick: openNewNoteModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, \"New Note\"), notes.map(function (note) {\n    return __jsx(\"div\", {\n      key: note.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 27\n      }\n    }, note.title);\n  }));\n};\n\nNotes.getInitialProps = function (_ref) {\n  var store = _ref.store,\n      isServer = _ref.isServer,\n      pathname = _ref.pathname,\n      query = _ref.query;\n  store.dispatch({\n    type: 'FOO',\n    payload: 'foo'\n  }); // The component can read from the store's state when rendered\n\n  return {\n    custom: 'custom'\n  }; // You can pass some custom props to the component from here\n};\n\nexport default Notes;","map":{"version":3,"sources":["/Users/Pranay/Desktop/workaholic/workaholic-app/components/NotesCard.js"],"names":["styles","Card","Router","Notes","props","notes","openNewNoteModal","push","map","note","id","title","getInitialProps","store","isServer","pathname","query","dispatch","type","payload","custom"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AAAA,MACjBC,KADiB,GACPD,KADO,CACjBC,KADiB;;AAEvB,MAAIC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC3BF,IAAAA,KAAK,CAACE,gBAAN;AACAJ,IAAAA,MAAM,CAACK,IAAP,CAAY,QAAZ;AACD,GAHD;;AAKA,SACE,MAAC,IAAD;AACE,IAAA,SAAS,EAAEP,MAAM,CAAC,YAAD,CADnB;AAEE,IAAA,KAAK,EAAE,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AAAQ,IAAA,OAAO,EAAEM,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,EAMID,KAAK,CAACG,GAAN,CAAU,UAAAC,IAAI;AAAA,WAAI;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoBD,IAAI,CAACE,KAAzB,CAAJ;AAAA,GAAd,CANJ,CADF;AAWD,CAlBD;;AAoBAR,KAAK,CAACS,eAAN,GAAwB,gBAAwC;AAAA,MAAtCC,KAAsC,QAAtCA,KAAsC;AAAA,MAA/BC,QAA+B,QAA/BA,QAA+B;AAAA,MAArBC,QAAqB,QAArBA,QAAqB;AAAA,MAAXC,KAAW,QAAXA,KAAW;AAC9DH,EAAAA,KAAK,CAACI,QAAN,CAAe;AAAEC,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,OAAO,EAAE;AAAxB,GAAf,EAD8D,CACb;;AACjD,SAAO;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAP,CAF8D,CAEjC;AAC9B,CAHD;;AAKA,eAAejB,KAAf","sourcesContent":["import styles from \"./TasksCard.module.scss\";\nimport Card from \"./Card\";\nimport Router from 'next/router'\n\nconst Notes = (props) => {\n  let { notes } = props;\n  let openNewNoteModal = () => {\n    props.openNewNoteModal();\n    Router.push('/notes');\n  };\n\n  return (\n    <Card \n      className={styles['tasks-card']}\n      title={\"Notes\"}\n    >\n      <button onClick={openNewNoteModal}>New Note</button>\n      {\n        notes.map(note => <div key={note.id}>{note.title}</div>)\n      }\n    </Card>\n  )\n};\n\nNotes.getInitialProps = ({store, isServer, pathname, query}) => {\n  store.dispatch({ type: 'FOO', payload: 'foo' }); // The component can read from the store's state when rendered\n  return { custom: 'custom' }; // You can pass some custom props to the component from here\n}\n\nexport default Notes;"]},"metadata":{},"sourceType":"module"}