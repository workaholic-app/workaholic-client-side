{"ast":null,"code":"var _jsxFileName = \"/Users/Pranay/Desktop/workaholic/workaholic-app/components/Notes.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styles from \"./Tasks.module.scss\";\nimport Card from \"./Card\";\nimport Link from 'next/link';\n\nconst Notes = props => {\n  let {\n    notes\n  } = props;\n  return __jsx(Card, {\n    className: styles['tasks-card'],\n    title: \"Notes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, __jsx(\"button\", {\n    on: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }), notes.map(note => __jsx(\"div\", {\n    key: note.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 27\n    }\n  }, note.title)));\n};\n\nNotes.getInitialProps = ({\n  store,\n  isServer,\n  pathname,\n  query\n}) => {\n  store.dispatch({\n    type: 'FOO',\n    payload: 'foo'\n  }); // The component can read from the store's state when rendered\n\n  return {\n    custom: 'custom'\n  }; // You can pass some custom props to the component from here\n};\n\nexport default Notes;","map":{"version":3,"sources":["/Users/Pranay/Desktop/workaholic/workaholic-app/components/Notes.js"],"names":["styles","Card","Link","Notes","props","notes","map","note","id","title","getInitialProps","store","isServer","pathname","query","dispatch","type","payload","custom"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACvB,MAAI;AAAEC,IAAAA;AAAF,MAAYD,KAAhB;AACA,SACE,MAAC,IAAD;AACE,IAAA,SAAS,EAAEJ,MAAM,CAAC,YAAD,CADnB;AAEE,IAAA,KAAK,EAAE,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AAAQ,IAAA,EAAE,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAMIK,KAAK,CAACC,GAAN,CAAUC,IAAI,IAAI;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoBD,IAAI,CAACE,KAAzB,CAAlB,CANJ,CADF;AAWD,CAbD;;AAeAN,KAAK,CAACO,eAAN,GAAwB,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA,QAAlB;AAA4BC,EAAAA;AAA5B,CAAD,KAAwC;AAC9DH,EAAAA,KAAK,CAACI,QAAN,CAAe;AAAEC,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,OAAO,EAAE;AAAxB,GAAf,EAD8D,CACb;;AACjD,SAAO;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAP,CAF8D,CAEjC;AAC9B,CAHD;;AAKA,eAAef,KAAf","sourcesContent":["import styles from \"./Tasks.module.scss\";\nimport Card from \"./Card\";\nimport Link from 'next/link'\n\nconst Notes = (props) => {\n  let { notes } = props;\n  return (\n    <Card \n      className={styles['tasks-card']}\n      title={\"Notes\"}\n    >\n      <button on></button>\n      {\n        notes.map(note => <div key={note.id}>{note.title}</div>)\n      }\n    </Card>\n  )\n};\n\nNotes.getInitialProps = ({store, isServer, pathname, query}) => {\n  store.dispatch({ type: 'FOO', payload: 'foo' }); // The component can read from the store's state when rendered\n  return { custom: 'custom' }; // You can pass some custom props to the component from here\n}\n\nexport default Notes;"]},"metadata":{},"sourceType":"module"}